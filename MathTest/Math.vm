function Math.init 0
    push constant 16
    pop static 0
    push static 0
    call Array.new 1
    pop static 1
    push constant 0
    push static 1
    add
    push constant 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    push static 1
    add
    push constant 2
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 2
    push static 1
    add
    push constant 4
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 3
    push static 1
    add
    push constant 8
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 4
    push static 1
    add
    push constant 16
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 5
    push static 1
    add
    push constant 32
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 6
    push static 1
    add
    push constant 64
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 7
    push static 1
    add
    push constant 128
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 8
    push static 1
    add
    push constant 256
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 9
    push static 1
    add
    push constant 512
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 10
    push static 1
    add
    push constant 1024
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 11
    push static 1
    add
    push constant 2048
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 12
    push static 1
    add
    push constant 4096
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 13
    push static 1
    add
    push constant 8192
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 14
    push static 1
    add
    push constant 16384
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 15
    push static 1
    add
    push constant 16384
    push constant 16384
    add
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 0
    return
function Math.isBitSet 0
    push argument 0
    push argument 1
    push static 1
    add
    pop pointer 1
    push that 0
    and
    push constant 0
    eq
    not
    return
function Math.mod 0
    push argument 0
    push argument 0
    push argument 1
    call Math.divide 2
    push argument 1
    call Math.multiply 2
    sub
    return
function Math.powerOfTwo 0
    push argument 0
    push static 1
    add
    pop pointer 1
    push that 0
    return
function Math.multiply 3
    push constant 0
    pop local 0
    push argument 0
    pop local 1
    push constant 0
    pop local 2
label Math_0
    push local 2
    push constant 16
    lt
    not
    if-goto Math_1
    push argument 1
    push local 2
    call Math.isBitSet 2
    not
    if-goto Math_3
    push local 0
    push local 1
    add
    pop local 0
    goto Math_2
label Math_3
label Math_2
    push local 1
    push local 1
    add
    pop local 1
    push local 2
    push constant 1
    add
    pop local 2
    goto Math_0
label Math_1
    push local 0
    return
function Math.divide 3
    push argument 0
    push constant 0
    lt
    push argument 1
    push constant 0
    lt
    eq
    pop local 2
    push argument 0
    call Math.abs 1
    pop argument 0
    push argument 1
    call Math.abs 1
    pop argument 1
    push argument 1
    push argument 0
    gt
    not
    if-goto Math_5
    push constant 0
    return
    goto Math_4
label Math_5
label Math_4
    push argument 0
    push argument 1
    push argument 1
    add
    call Math.divide 2
    pop local 0
    push argument 0
    push constant 2
    push local 0
    call Math.multiply 2
    push argument 1
    call Math.multiply 2
    sub
    push argument 1
    lt
    not
    if-goto Math_7
    push local 0
    push local 0
    add
    pop local 1
    goto Math_6
label Math_7
    push local 0
    push local 0
    add
    push constant 1
    add
    pop local 1
label Math_6
    push local 2
    not
    if-goto Math_9
    push local 1
    return
    goto Math_8
label Math_9
    push local 1
    neg
    return
label Math_8
function Math.sqrt 4
    push constant 0
    pop local 0
    push constant 7
    pop local 1
label Math_10
    push local 1
    push constant 0
    lt
    not
    not
    if-goto Math_11
    push local 0
    push local 1
    push static 1
    add
    pop pointer 1
    push that 0
    add
    pop local 2
    push local 2
    push local 2
    call Math.multiply 2
    pop local 3
    push local 3
    push argument 0
    gt
    not
    push local 3
    push constant 0
    gt
    and
    not
    if-goto Math_13
    push local 2
    pop local 0
    goto Math_12
label Math_13
label Math_12
    push local 1
    push constant 1
    sub
    pop local 1
    goto Math_10
label Math_11
    push local 0
    return
function Math.max 0
    push argument 0
    push argument 1
    gt
    not
    if-goto Math_15
    push argument 0
    return
    goto Math_14
label Math_15
label Math_14
    push argument 1
    return
function Math.min 0
    push argument 0
    push argument 1
    lt
    not
    if-goto Math_17
    push argument 0
    return
    goto Math_16
label Math_17
label Math_16
    push argument 1
    return
function Math.abs 0
    push argument 0
    push constant 0
    lt
    not
    if-goto Math_19
    push constant 0
    push argument 0
    sub
    return
    goto Math_18
label Math_19
label Math_18
    push argument 0
    return